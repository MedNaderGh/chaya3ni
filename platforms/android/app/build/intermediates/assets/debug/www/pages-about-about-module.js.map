{"version":3,"sources":["webpack:///./src/app/pages/about/about.module.ts","webpack:///./src/app/pages/about/about.page.html","webpack:///./src/app/pages/about/about.page.scss","webpack:///./src/app/pages/about/about.page.ts"],"names":[],"mappings":"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","file":"pages-about-about-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Nous Contacter</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card class=\\\"bg-white\\\" no-margin>\\n    <ion-card-content>\\n      <h1 margin-bottom>\\n        <ion-text color=\\\"primary\\\" ><strong>Interface de repport des bugs et suggestion pour l'admin</strong></ion-text>\\n      </h1>\\n        <form [formGroup]=\\\"contactForm\\\" class=\\\"list-form\\\">\\n          <ion-item no-padding class=\\\"animated fadeInUp\\\">\\n            <ion-label position=\\\"floating\\\">\\n              <ion-icon name=\\\"clipboard\\\" item-start></ion-icon>\\n              Sujet\\n            </ion-label>\\n            <ion-input color=\\\"secondary\\\" type=\\\"text\\\" formControlName=\\\"sujet\\\" text-center></ion-input>\\n          </ion-item>\\n          <p ion-text class=\\\"text08\\\" *ngIf=\\\"!contactForm.get('sujet').valid && contactForm.get('sujet').touched \\\">\\n            <ion-text color=\\\"warning\\\">\\n              *Champ obligatoire\\n            </ion-text>\\n          </p>\\n          <ion-item no-padding class=\\\"animated fadeInUp\\\">\\n            <ion-label position=\\\"floating\\\">\\n              <ion-icon name=\\\"mail\\\" item-start></ion-icon>\\n              Email\\n            </ion-label>\\n            <ion-input color=\\\"secondary\\\" type=\\\"email\\\" formControlName=\\\"email\\\" text-center></ion-input>\\n          </ion-item>\\n          <p ion-text class=\\\"text08\\\" *ngIf=\\\"!contactForm.get('email').valid && contactForm.get('email').touched \\\">\\n            <ion-text color=\\\"warning\\\">\\n              *Champ obligatoire\\n            </ion-text>\\n          </p>\\n          <ion-input color=\\\"secondary\\\" type=\\\"hidden\\\" formControlName=\\\"id\\\" text-center></ion-input>\\n          <ion-input color=\\\"secondary\\\" type=\\\"hidden\\\" formControlName=\\\"name\\\" text-center></ion-input>\\n          <ion-item no-padding class=\\\"animated fadeInUp\\\">\\n            <ion-label position=\\\"floating\\\">\\n              <ion-icon name=\\\"paper\\\" item-start></ion-icon>\\n              Message\\n            </ion-label>\\n            <ion-textarea color=\\\"secondary\\\"  formControlName=\\\"msg\\\" text-center></ion-textarea>\\n          </ion-item>\\n          <p ion-text class=\\\"text08\\\" *ngIf=\\\"!contactForm.get('msg').valid && contactForm.get('msg').touched \\\">\\n            <ion-text color=\\\"warning\\\">\\n              *Champ obligatoire\\n            </ion-text>\\n          </p>\\n          <ion-button icon-left size=\\\"medium\\\" expand=\\\"full\\\" shape=\\\"round\\\" color=\\\"dark\\\" (click)= \\\"envoyer(contactForm) \\\"[disabled]=\\\"!contactForm.valid\\\" tappable>\\n            <ion-icon name=\\\"send\\\"></ion-icon>\\n            envoyer\\n          </ion-button>   \\n</form>  \\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\"","module.exports = \":host ion-content {\\n  --background: linear-gradient(-135deg, var(--ion-color-medium), var(--ion-color-light))\\n    ; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWJvdXQvRTpcXGRlYWx0bi9zcmNcXGFwcFxccGFnZXNcXGFib3V0XFxhYm91dC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFUTtJQUFhLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hYm91dC9hYm91dC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgaW9uLWNvbnRlbnQge1xuICAgICAgICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgtMTM1ZGVnLCB2YXIoLS1pb24tY29sb3ItbWVkaXVtKSwgdmFyKC0taW9uLWNvbG9yLWxpZ2h0KSlcbiAgICB9XG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NavController, MenuController, ToastController, AlertController, LoadingController } from '@ionic/angular';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { HttpHeaders ,HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n  contactForm: FormGroup;\n  userDetails: any;\n \n  constructor(private http: HttpClient,\n    public navCtrl: NavController,\n    public menuCtrl: MenuController,\n    public toastCtrl: ToastController,\n    public alertCtrl: AlertController,\n    public loadingCtrl: LoadingController,\n    private formBuilder: FormBuilder,\n    private user: UserService,\n    private router:Router) { }\n\n  ngOnInit() {\n    this.contactForm = this.formBuilder.group({\n      'email': ['', [Validators.maxLength(70), Validators.pattern('^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)(\\.[A-Za-z]{2,})$'), Validators.required]],\n      'sujet': ['', [Validators.maxLength(70),  Validators.required]],\n      'msg': ['', [Validators.maxLength(70),  Validators.required]],\n      'name':['',],\n      'id':['',],\n    });\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': localStorage.getItem('jwtToken') })\n    };\n    this.http.get(`${this.user.uri}/userProfile`,httpOptions).subscribe(\n      data => {\n        this.userDetails = data;\n        this.contactForm.get('id').setValue(this.userDetails._id);\n        this.contactForm.get('name').setValue(this.userDetails.fullName);\n        console.log(this.userDetails._id,this.userDetails.fullName);\n      },\n      err => { \n        console.log(err);\n        \n      }\n    );\n  }\n  envoyer(form: FormGroup) {\n    this.http.post(`${this.user.uri}/message`,form.value).subscribe(\n      res => {\n        this.presentToast();\n        this.contactForm.reset();\n      },\n      err => {\n      this.erreurToast();\n      }\n    );\n  }\n  async presentToast() {\n    const toast = await this.toastCtrl.create({\n      message: 'Message envoyer avec succees vous allez recevoir un reponse via email dans la prochaine 48H',\n      duration: 6000,\n      showCloseButton: true,\n      closeButtonText: \"X\"\n    });\n    toast.present();\n  }\n  async erreurToast() {\n    const toast = await this.toastCtrl.create({\n      message: 'Operation echouee',\n      duration: 2000,\n      showCloseButton: true,\n      closeButtonText: \"X\"\n    });\n    toast.present();\n  }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/app/pages/login/login.module.ts","webpack:///./src/app/pages/login/login.page.html","webpack:///./src/app/pages/login/login.page.scss","webpack:///./src/app/pages/login/login.page.ts"],"names":[],"mappings":"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","file":"pages-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}","module.exports = \"<ion-content padding class=\\\"animated fadeIn login auth-page\\\">\\n  <div class=\\\"theme-bg\\\"></div>\\n  <div class=\\\"auth-content\\\">\\n\\n    <div padding-horizontal text-center class=\\\"animated fadeInDown\\\">\\n      <div class=\\\"logo\\\"></div>\\n      <h4 no-margin>\\n        <ion-text color=\\\"light\\\" class=\\\"fw700\\\">\\n          DealTN\\n        </ion-text>\\n      </h4>\\n    </div>\\n\\n    <form [formGroup]=\\\"onLoginForm\\\" class=\\\"list-form\\\">\\n      <ion-item no-padding class=\\\"animated fadeInUp\\\">\\n        <ion-label position=\\\"floating\\\">\\n          <ion-icon name=\\\"mail\\\" item-start></ion-icon>\\n          Email\\n        </ion-label>\\n        <ion-input color=\\\"secondary\\\" type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n      </ion-item>\\n      <p ion-text class=\\\"text08\\\" *ngIf=\\\"!onLoginForm.get('email').valid && onLoginForm.get('email').touched \\\">\\n        <ion-text color=\\\"warning\\\">\\n          *Email invalide\\n        </ion-text>\\n      </p>\\n      <ion-item no-padding class=\\\"animated fadeInUp\\\">\\n        <ion-label position=\\\"floating\\\">\\n          <ion-icon name=\\\"lock\\\" item-start></ion-icon>\\n          Mot de passe\\n        </ion-label>\\n        <ion-input color=\\\"secondary\\\" type=\\\"password\\\" formControlName=\\\"password\\\" ></ion-input>\\n      </ion-item>\\n      <p ion-text class=\\\"text08\\\" *ngIf=\\\"onLoginForm.get('password').touched && onLoginForm.get('password').hasError('required')\\\">\\n        <ion-text color=\\\"warning\\\">\\n          *champ obligatoire\\n        </ion-text>\\n      </p>\\n \\n    </form>\\n\\n    <p text-left tappable (click)=\\\"forgotPass()\\\" class=\\\"paz\\\">\\n      <ion-text color=\\\"light\\\">\\n    Mot de passe oublier ?\\n      </ion-text>\\n    </p>\\n\\n    <div>\\n      <ion-button icon-left size=\\\"medium\\\" expand=\\\"full\\\" shape=\\\"round\\\" color=\\\"dark\\\" (click)= \\\"login() \\\"[disabled]=\\\"!onLoginForm.valid\\\" tappable>\\n        <ion-icon name=\\\"log-in\\\"></ion-icon>\\n        se connecter\\n      </ion-button>\\n\\n      <p text-center>\\n        <ion-text color=\\\"light\\\">\\n          Ou se connecter avec:\\n        </ion-text>\\n      </p>\\n\\n      <ion-grid class=\\\"btn-group\\\">\\n        <ion-row>\\n          <ion-col size=\\\"4\\\">\\n            <ion-button shape=\\\"round\\\" expand=\\\"full\\\" color=\\\"secondary\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"logo-facebook\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-button shape=\\\"round\\\" expand=\\\"full\\\" color=\\\"secondary\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"logo-twitter\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-button shape=\\\"round\\\" expand=\\\"full\\\" color=\\\"secondary\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"logo-googleplus\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n    </div>\\n    <div text-center margin-top>\\n      <span (click)=\\\"goToRegister()\\\" class=\\\"paz\\\" tappable>\\n        <ion-text color=\\\"light\\\">\\n          Pas de compte ? <strong>s'inscrire</strong>\\n        </ion-text>\\n      </span>\\n    </div>\\n\\n  </div>\\n</ion-content>\"","module.exports = \":host ion-content {\\n  --background: linear-gradient(135deg, var(--ion-color-dark), var(--ion-color-primary)); }\\n\\n.paz {\\n  position: relative;\\n  z-index: 10; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vRTpcXGRlYWx0bi9zcmNcXGFwcFxccGFnZXNcXGxvZ2luXFxsb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFUSxzRkFBYSxFQUFBOztBQUlyQjtFQUNJLGtCQUFrQjtFQUNsQixXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgaW9uLWNvbnRlbnQge1xuICAgICAgICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIHZhcigtLWlvbi1jb2xvci1kYXJrKSwgdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpKTtcbiAgICB9XG59XG5cbi5wYXoge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxMDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NavController, MenuController, ToastController, AlertController, LoadingController } from '@ionic/angular';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { HttpHeaders ,HttpClient } from '@angular/common/http';\nimport { HTTP } from '@ionic-native/http/ngx';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  [x: string]: any;\n  public onLoginForm: FormGroup;\n\n  constructor(\n    private http: HttpClient,\n    public navCtrl: NavController,\n    public menuCtrl: MenuController,\n    public toastCtrl: ToastController,\n    public alertCtrl: AlertController,\n    public loadingCtrl: LoadingController,\n    private formBuilder: FormBuilder,\n    private user: UserService,\n    private router:Router\n  ) { }\n\n  ionViewWillEnter() {\n    this.menuCtrl.enable(false);\n  }\n  serverErrorMessages: string;\n  ngOnInit() {\n\n    this.onLoginForm = this.formBuilder.group({\n      'email': ['', [Validators.maxLength(70), Validators.pattern('^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)(\\.[A-Za-z]{2,})$'), Validators.required]],\n      'password': [null, Validators.compose([\n        Validators.required\n      ])],\n\n    });\n    if(this.user.isLoggedIn())\n    this.router.navigate(['/home-results']);\n  }\n\n  async forgotPass() {\n    const alert = await this.alertCtrl.create({\n      header: 'mot de pass oublié?',\n      message: 'Entrer ton e-mail pour resevoir un e-mail de restauration',\n      inputs: [\n        {\n          name: 'email',\n          type: 'email',\n          placeholder: 'Email'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm annulation');\n          }\n        }, {\n          text: 'Confirmer',\n          handler: async () => {\n            const loader = await this.loadingCtrl.create({\n              duration: 2000\n            });\n\n            loader.present();\n            loader.onWillDismiss().then(async l => {\n              const toast = await this.toastCtrl.create({\n                showCloseButton: true,\n                message: 'Email envoyé.',\n                duration: 3000,\n                position: 'bottom'\n              });\n\n              toast.present();\n            });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n  /*login(form : FormGroup){\n    this.user.login(form.value).subscribe(\n      res => {\n        this.user.setToken(res['token']);\n        this.router.navigateByUrl('/test');\n        this.logsToast()\n      },\n      err => {\n        this.serverErrorMessages = err.error.message;\n        this.logeToast()\n      }\n    );\n  }*/\n  data: any;\n  message='';\n  login() {\n    console.log(this.onLoginForm.value);\n    this.http.post(`${this.user.uri}/signin`,this.onLoginForm.value).subscribe(res=> {\n      this.data = res;\n      localStorage.setItem('jwtToken', this.data.token);\n      this.router.navigate(['/home-results']);\n    }, err => {\n      this.logeToast()\n    });\n  }\n  async logsToast() {\n    const toast = await this.toastCtrl.create({\n      message: 'login avec succes',\n      duration: 2000\n    });\n    toast.present();\n  }\n  async logeToast() {\n    const toast = await this.toastCtrl.create({\n      message: 'login ou mot de passe est incorrecte',\n      duration: 2000\n    });\n    toast.present();\n  }\n  goToRegister() {\n    this.navCtrl.navigateRoot('/register');\n  }\n\n  goToHome() {\n    this.navCtrl.navigateRoot('/home-results');\n  }\n\n}\n"],"sourceRoot":""}
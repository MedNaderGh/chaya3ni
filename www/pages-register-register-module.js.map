{"version":3,"sources":["webpack:///./src/app/pages/register/register.module.ts","webpack:///./src/app/pages/register/register.page.html","webpack:///./src/app/pages/register/register.page.scss","webpack:///./src/app/pages/register/register.page.ts"],"names":[],"mappings":"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","file":"pages-register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<ion-content padding class=\\\"login auth-page\\\">\\n\\n  <div class=\\\"auth-content\\\">\\n    <div padding-horizontal text-center>\\n      <div class=\\\"logo\\\"></div>\\n      <h3 no-margin>\\n        <ion-text color=\\\"light\\\" class=\\\"fw700\\\">\\n          <ion-text color=\\\"Light\\\">Inscription</ion-text>\\n        </ion-text>\\n      </h3>\\n    </div>\\n    <form [formGroup]=\\\"onRegisterForm\\\" class=\\\"list-form\\\">\\n      <ion-item no-padding class=\\\"animated fadeInUp\\\">\\n        <ion-label position=\\\"floating\\\">\\n          <ion-icon name=\\\"contact\\\" item-start></ion-icon>\\n          Nom et Prenom\\n        </ion-label>\\n        <ion-input color=\\\"secondary\\\" type=\\\"text\\\" formControlName=\\\"fullName\\\"></ion-input>\\n      </ion-item>\\n      <p ion-text class=\\\"text08\\\" *ngIf=\\\"onRegisterForm.get('fullName').touched && onRegisterForm.get('fullName').hasError('required')\\\">\\n        <ion-text color=\\\"warning\\\">\\n          *champ obligatoire\\n        </ion-text>\\n      </p>\\n\\n      <ion-item no-padding class=\\\"animated fadeInUp\\\">\\n        <ion-label position=\\\"floating\\\">\\n          <ion-icon name=\\\"mail\\\" item-start></ion-icon>\\n          Email\\n        </ion-label>\\n        <ion-input color=\\\"secondary\\\" type=\\\"email\\\" formControlName=\\\"email\\\" ></ion-input>\\n      </ion-item>\\n      <p ion-text class=\\\"text08\\\" *ngIf=\\\" onRegisterForm.get('email').touched && onRegisterForm.get('email').hasError('required')\\\">\\n        <ion-text color=\\\"warning\\\">\\n          *champ obligatoire\\n        </ion-text>\\n      </p>\\n      <ion-item no-padding class=\\\"animated fadeInUp\\\">\\n        <ion-label position=\\\"floating\\\">\\n          <ion-icon name=\\\"lock\\\" item-start></ion-icon>\\n          Mot de passe\\n        </ion-label>\\n        <ion-input color=\\\"secondary\\\" type=\\\"password\\\" formControlName=\\\"password\\\" ></ion-input>\\n      </ion-item>\\n      <p ion-text class=\\\"text08\\\" *ngIf=\\\"onRegisterForm.get('password').touched && onRegisterForm.get('password').hasError('required')\\\">\\n        <ion-text color=\\\"warning\\\">\\n          *champ obligatoire\\n        </ion-text>\\n      </p>\\n      <ion-item no-padding class=\\\"animated fadeInUp\\\">\\n        <ion-label position=\\\"floating\\\">\\n          <ion-icon name=\\\"calendar\\\" item-start></ion-icon>\\n          Date de naissance\\n        </ion-label>\\n          <ion-datetime style=\\\"color:white\\\" :pickerOptions=\\\"customPickerOptions\\\"  formControlName=\\\"dnaiss\\\"></ion-datetime>\\n        </ion-item>    \\n          <p ion-text class=\\\"text08\\\" *ngIf=\\\"onRegisterForm.get('dnaiss').touched && onRegisterForm.get('dnaiss').hasError('required')\\\">\\n        <ion-text color=\\\"warning\\\">\\n          *champ obligatoire\\n        </ion-text>\\n      </p>\\n      <ion-item no-padding class=\\\"animated fadeInUp\\\">\\n        <ion-label position=\\\"floating\\\">\\n          <ion-icon name=\\\"call\\\" item-start></ion-icon>\\n          Numero de téléphone\\n        </ion-label>\\n        <ion-input color=\\\"secondary\\\" type=\\\"tel\\\" formControlName=\\\"tel\\\" ></ion-input>\\n      </ion-item>\\n      <p ion-text class=\\\"text08\\\" *ngIf=\\\"onRegisterForm.get('tel').touched && onRegisterForm.get('tel').hasError('required')\\\">\\n        <ion-text color=\\\"warning\\\">\\n          *champ obligatoire\\n        </ion-text>\\n      </p>\\n    </form>\\n    <div margin-top>\\n      <ion-button icon-left size=\\\"medium\\\" expand=\\\"full\\\" shape=\\\"round\\\" color=\\\"dark\\\" (click)=\\\"inscrit(onRegisterForm)\\\"  [disabled]=\\\"!onRegisterForm.valid\\\"\\n        tappable>\\n        <ion-icon name=\\\"log-in\\\"></ion-icon>\\n        S'inscrire\\n      </ion-button>\\n      <p text-center>\\n        <ion-text color=\\\"light\\\">\\n          Ou s'inscrire avec:\\n        </ion-text>\\n      </p>\\n      <ion-grid class=\\\"btn-group\\\">\\n        <ion-row>\\n          <ion-col size=\\\"4\\\">\\n            <ion-button shape=\\\"round\\\" expand=\\\"full\\\" color=\\\"secondary\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"logo-facebook\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-button shape=\\\"round\\\" expand=\\\"full\\\" color=\\\"secondary\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"logo-twitter\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n            <ion-button shape=\\\"round\\\" expand=\\\"full\\\" color=\\\"secondary\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"logo-googleplus\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </div>\\n    <div text-center margin-top>\\n      <span (click)=\\\"goToLogin()\\\" tappable>\\n        <ion-text color=\\\"light\\\">\\n          <strong>J'ai déja un compte!</strong>\\n        </ion-text>\\n      </span>\\n    </div>\\n  </div>\\n</ion-content>\"","module.exports = \":host ion-content {\\n  --background: linear-gradient(135deg, var(--ion-color-dark), var(--ion-color-primary))\\n  ; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvRTpcXGRlYWx0bi9zcmNcXGFwcFxccGFnZXNcXHJlZ2lzdGVyXFxyZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSTtFQUFhLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGlvbi1jb250ZW50IHtcbiAgICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIHZhcigtLWlvbi1jb2xvci1kYXJrKSwgdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpKVxuICB9XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NavController, MenuController, LoadingController } from '@ionic/angular';\nimport { UserService } from '../user.service';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\n  export class RegisterPage implements OnInit {\n  ngOnInit(): void {\n  }\n  public onRegisterForm: FormGroup;\n    constructor(private fb: FormBuilder, private us: UserService ,public navCtrl: NavController,\n      public menuCtrl: MenuController,public toastController: ToastController,\n      public loadingCtrl: LoadingController,) {\n      this.createForm();\n    }\n    async presentToast() {\n      const toast = await this.toastController.create({\n        message: 'Inscription reussi',\n        duration: 2000\n      });\n      toast.present();\n    }\n    async erreurToast() {\n      const toast = await this.toastController.create({\n        message: 'email deja existe',\n        duration: 2000\n      });\n      toast.present();\n    }\n    createForm() {\n      this.onRegisterForm= this.fb.group({\n        fullName: ['', Validators.required ],\n       /* email: ['', Validators.required],*/\n       email: ['', Validators.compose([Validators.maxLength(70), Validators.pattern('^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)(\\.[A-Za-z]{2,})$'), Validators.required])],\n        password: ['', Validators.required ],\n        dnaiss: [null, Validators.compose([\n          Validators.required\n        ])],\n        tel: [null, Validators.compose([\n          Validators.required,Validators.minLength(8),Validators.maxLength(12)\n        ])]\n      });\n    }\n    /*addUser(name,email, password) {\n      this.us.addUser(name, email, password);\n    }*/\n    inscrit(form: FormGroup) {\n      this.us.postUser(form.value).subscribe(\n        res => {\n          this.presentToast();\n          this.goToLogin();\n        },\n        err => {\n        this.erreurToast();\n        }\n      );\n    }\n    goToLogin() {\n      this.navCtrl.navigateRoot('/');\n    }\n  }\n"],"sourceRoot":""}